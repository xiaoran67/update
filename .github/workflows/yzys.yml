name: 拆分IPTV为央视+卫视列表
on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 0 * * *'  # 每天UTC 0点（北京时间8点）自动运行，可调整

jobs:
  split-iptv:
    runs-on: ubuntu-latest
    steps:
      ### 1. 检出仓库代码 ###
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # 禁用默认凭据，避免权限问题

      ### 2. 下载原始文件 ###
      - name: 下载IPTV源文件
        run: |
          # 下载目标文件
          curl -fSL "https://raw.githubusercontent.com/kakaxi-1/IPTV/refs/heads/main/ipv4.1.txt" -o temp_ipv4.txt
          # 检查下载是否成功
          if [ ! -f temp_ipv4.txt ]; then
            echo "错误：源文件下载失败！"
            exit 1
          fi

      ### 3. 过滤分组信息（删除更新时间、分组标记）###
      - name: 清理分组行
        run: |
          # 删除含「更新时间」或「#genre#」的行（分组信息）
          sed -e '/更新时间/d' -e '/#genre#/d' temp_ipv4.txt > temp_filtered.txt
          # 检查清理后文件非空（防止源文件全是分组行）
          if [ ! -s temp_filtered.txt ]; then
            echo "错误：清理后无有效内容！"
            exit 1
          fi

      ### 4. 拆分央视和卫视频道 ###
      - name: 提取央视+卫视频道
        run: |
          mkdir -p 手工区  # 确保目标目录存在
          # 🔹 提取央视：仅保留行首以「CCTV」开头的行
          grep "^CCTV" temp_filtered.txt > "手工区/♪优质央视.txt"
          # 🔹 提取卫视：仅保留含「卫视」关键字的行
          grep "卫视" temp_filtered.txt > "手工区/♪优质卫视.txt"
          # 检查两个文件非空（避免空文件提交）
          if [ ! -s "手工区/♪优质央视.txt" ]; then
            echo "错误：央视文件为空！可能源文件无CCTV开头的行。"
            exit 1
          fi
          if [ ! -s "手工区/♪优质卫视.txt" ]; then
            echo "错误：卫视文件为空！可能源文件无含「卫视」的行。"
            exit 1
          fi

      ### 5. 提交并推送更新 ###
      - name: 提交到仓库
        run: |
          # 配置Git身份（必须，否则无法提交）
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          # 暂存两个文件
          git add "手工区/♪优质央视.txt" "手工区/♪优质卫视.txt"
          # 检查是否有实际变更
          if git diff --quiet --cached; then
            echo "文件无更新，无需提交。"
          else
            # 提交并推送（使用GitHub Token授权）
            git commit -m "自动拆分：央视+卫视频道更新（$(date +'%Y-%m-%d %H:%M:%S')）"
            git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:${{ github.ref_name }}
          fi
